[{"/Users/aawferris/Local_Repos/BlackwaterChat/src/index.js":"1","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/App/App.js":"2","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/BrowserUnsupported/BrowserUnsupported.js":"3","/Users/aawferris/Local_Repos/BlackwaterChat/src/api.js":"4","/Users/aawferris/Local_Repos/BlackwaterChat/src/CallObjectContext.js":"5","/Users/aawferris/Local_Repos/BlackwaterChat/src/urlUtils.js":"6","/Users/aawferris/Local_Repos/BlackwaterChat/src/logUtils.js":"7","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/StartButton/StartButton.js":"8","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Call/Call.js":"9","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Tray/Tray.js":"10","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Call/callState.js":"11","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Tile/Tile.js":"12","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/TrayButton/TrayButton.js":"13","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Chat/Chat.js":"14","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/CallMessage/CallMessage.js":"15","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Icon/Icon.js":"16"},{"size":388,"mtime":1645797616752,"results":"17","hashOfConfig":"18"},{"size":7014,"mtime":1645797616745,"results":"19","hashOfConfig":"18"},{"size":406,"mtime":1645797616746,"results":"20","hashOfConfig":"18"},{"size":934,"mtime":1645798721649,"results":"21","hashOfConfig":"18"},{"size":66,"mtime":1645797616744,"results":"22","hashOfConfig":"18"},{"size":342,"mtime":1645797616753,"results":"23","hashOfConfig":"18"},{"size":82,"mtime":1645797616752,"results":"24","hashOfConfig":"18"},{"size":336,"mtime":1645797616749,"results":"25","hashOfConfig":"18"},{"size":4696,"mtime":1645797616746,"results":"26","hashOfConfig":"18"},{"size":4021,"mtime":1645797616750,"results":"27","hashOfConfig":"18"},{"size":4216,"mtime":1645797616747,"results":"28","hashOfConfig":"18"},{"size":4089,"mtime":1645797616749,"results":"29","hashOfConfig":"18"},{"size":688,"mtime":1645797616751,"results":"30","hashOfConfig":"18"},{"size":2292,"mtime":1645797616748,"results":"31","hashOfConfig":"18"},{"size":369,"mtime":1645797616747,"results":"32","hashOfConfig":"18"},{"size":6163,"mtime":1645797616748,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i6vwww",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aawferris/Local_Repos/BlackwaterChat/src/index.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/App/App.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/BrowserUnsupported/BrowserUnsupported.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/api.js",["85","86"],[],"const newRoomEndpoint = `${window.location.origin}/api/rooms`;\n\n/**\n * Create a short-lived room for demo purposes.\n *\n * It uses the redirect proxy as specified in netlify.toml`\n * This will work locally if you following the Netlify specific instructions\n * in README.md\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms and what options are available.\n */\nasync function createRoom() {\n  const exp = Math.round(Date.now() / 1000) + 60 * 30;\n  const options = {\n    properties: {\n      exp: exp,\n    },\n  };\n  let response = await fetch(newRoomEndpoint, {\n      method: 'POST',\n      body: JSON.stringify(options),\n      mode: 'cors',\n    }),\n    room = await response.json();\n  // return room;\n\n  // Comment out the above and uncomment the below, using your own URL\n  return { url: 'https://aferris.daily.co/testroom' };\n}\n\nexport default { createRoom };\n","/Users/aawferris/Local_Repos/BlackwaterChat/src/CallObjectContext.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/urlUtils.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/logUtils.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/StartButton/StartButton.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Call/Call.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Tray/Tray.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Call/callState.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Tile/Tile.js",["87"],[],"import React, { useEffect, useMemo, useRef } from 'react';\nimport './Tile.css';\n\nfunction getTrackUnavailableMessage(kind, trackState) {\n  if (!trackState) return;\n  switch (trackState.state) {\n    case 'blocked':\n      if (trackState.blocked.byPermissions) {\n        return `${kind} permission denied`;\n      } else if (trackState.blocked.byDeviceMissing) {\n        return `${kind} device missing`;\n      }\n      return `${kind} blocked`;\n    case 'off':\n      if (trackState.off.byUser) {\n        return `${kind} muted`;\n      } else if (trackState.off.byBandwidth) {\n        return `${kind} muted to save bandwidth`;\n      }\n      return `${kind} off`;\n    case 'sendable':\n      return `${kind} not subscribed`;\n    case 'loading':\n      return `${kind} loading...`;\n    case 'interrupted':\n      return `${kind} interrupted`;\n    case 'playable':\n      return null;\n  }\n}\n\n/**\n * Props\n * - videoTrackState: DailyTrackState?\n * - audioTrackState: DailyTrackState?\n * - isLocalPerson: boolean\n * - isLarge: boolean\n * - disableCornerMessage: boolean\n * - onClick: Function\n */\nexport default function Tile(props) {\n  const videoEl = useRef(null);\n  const audioEl = useRef(null);\n\n  const videoTrack = useMemo(() => {\n    // For video let's use the `track` field, which is only present when video\n    // is in the \"playable\" state.\n    // (Using `persistentTrack` could result in a still frame being shown when\n    // remote video is muted).\n    return props.videoTrackState?.track;\n  }, [props.videoTrackState]);\n\n  const audioTrack = useMemo(() => {\n    // For audio let's use the `persistentTrack` field, which is present whether\n    // or not audio is in the \"playable\" state.\n    // (Using `track` would result in a bug where, if remote audio were unmuted\n    // while this call was is in a Safari background tab, audio wouldn't resume\n    // playing).\n    return props.audioTrackState?.persistentTrack;\n  }, [props.audioTrackState]);\n\n  const videoUnavailableMessage = useMemo(() => {\n    return getTrackUnavailableMessage('video', props.videoTrackState);\n  }, [props.videoTrackState]);\n\n  const audioUnavailableMessage = useMemo(() => {\n    return getTrackUnavailableMessage('audio', props.audioTrackState);\n  }, [props.audioTrackState]);\n\n  /**\n   * When video track changes, update video srcObject\n   */\n  useEffect(() => {\n    videoEl.current &&\n      (videoEl.current.srcObject = videoTrack && new MediaStream([videoTrack]));\n  }, [videoTrack]);\n\n  /**\n   * When audio track changes, update audio srcObject\n   */\n  useEffect(() => {\n    audioEl.current &&\n      (audioEl.current.srcObject = audioTrack && new MediaStream([audioTrack]));\n  }, [audioTrack]);\n\n  function getVideoComponent() {\n    return videoTrack && <video autoPlay muted playsInline ref={videoEl} />;\n  }\n\n  function getAudioComponent() {\n    return (\n      !props.isLocalPerson &&\n      audioTrack && <audio autoPlay playsInline ref={audioEl} />\n    );\n  }\n\n  function getOverlayComponent() {\n    // Show overlay when video is unavailable. Audio may be unavailable too.\n    return (\n      videoUnavailableMessage && (\n        <p className=\"overlay\">\n          {videoUnavailableMessage}\n          {audioUnavailableMessage && (\n            <>\n              <br />\n              {audioUnavailableMessage}\n            </>\n          )}\n        </p>\n      )\n    );\n  }\n\n  function getCornerMessageComponent() {\n    // Show corner message when only audio is unavailable.\n    return (\n      !props.disableCornerMessage &&\n      audioUnavailableMessage &&\n      !videoUnavailableMessage && (\n        <p className=\"corner\">{audioUnavailableMessage}</p>\n      )\n    );\n  }\n\n  function getClassNames() {\n    let classNames = 'tile';\n    classNames += props.isLarge ? ' large' : ' small';\n    props.isLocalPerson && (classNames += ' local');\n    return classNames;\n  }\n\n  return (\n    <div className={getClassNames()} onClick={props.onClick}>\n      <div className=\"background\" />\n      {getOverlayComponent()}\n      {getVideoComponent()}\n      {getAudioComponent()}\n      {getCornerMessageComponent()}\n    </div>\n  );\n}\n","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/TrayButton/TrayButton.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Chat/Chat.js",["88"],[],"import React, { useContext, useState, useEffect } from 'react';\nimport CallObjectContext from '../../CallObjectContext';\nimport './Chat.css';\n\nexport default function Chat(props) {\n  const callObject = useContext(CallObjectContext);\n  const [inputValue, setInputValue] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    callObject.sendAppMessage({ message: inputValue }, '*');\n    const name = callObject.participants().local.user_name\n      ? callObject.participants().local.user_name\n      : 'Guest';\n    setChatHistory([\n      ...chatHistory,\n      {\n        sender: name,\n        message: inputValue,\n      },\n    ]);\n    setInputValue('');\n  }\n\n  /**\n   * Update chat state based on a message received to all participants.\n   *\n   */\n  useEffect(() => {\n    if (!callObject) {\n      return;\n    }\n\n    function handleAppMessage(event) {\n      const participants = callObject.participants();\n      const name = participants[event.fromId].user_name\n        ? participants[event.fromId].user_name\n        : 'Guest';\n      setChatHistory([\n        ...chatHistory,\n        {\n          sender: name,\n          message: event.data.message,\n        },\n      ]);\n      // Make other icons light up\n      props.notification();\n    }\n\n    callObject.on('app-message', handleAppMessage);\n\n    return function cleanup() {\n      callObject.off('app-message', handleAppMessage);\n    };\n  }, [callObject, chatHistory]);\n\n  useEffect(() => {}, [chatHistory]);\n\n  return props.onClickDisplay ? (\n    <div className=\"chat\">\n      {chatHistory.map((entry, index) => (\n        <div key={`entry-${index}`} className=\"messageList\">\n          <b>{entry.sender}</b>: {entry.message}\n        </div>\n      ))}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"chatInput\"></label>\n        <input\n          id=\"chatInput\"\n          className=\"chat-input\"\n          type=\"text\"\n          placeholder=\"Type your message here..\"\n          value={inputValue}\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\" className=\"send-chat-button\">\n          Send\n        </button>\n      </form>\n    </div>\n  ) : null;\n}\n","/Users/aawferris/Local_Repos/BlackwaterChat/src/components/CallMessage/CallMessage.js",[],[],"/Users/aawferris/Local_Repos/BlackwaterChat/src/components/Icon/Icon.js",[],[],{"ruleId":"89","severity":1,"message":"90","line":25,"column":5,"nodeType":"91","messageId":"92","endLine":25,"endColumn":9},{"ruleId":"93","severity":1,"message":"94","line":32,"column":1,"nodeType":"95","endLine":32,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":6,"column":3,"nodeType":"98","messageId":"99","endLine":29,"endColumn":4},{"ruleId":"100","severity":1,"message":"101","line":60,"column":6,"nodeType":"102","endLine":60,"endColumn":31,"suggestions":"103"},"no-unused-vars","'room' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["104"],{"desc":"105","fix":"106"},"Update the dependencies array to be: [callObject, chatHistory, props]",{"range":"107","text":"108"},[1547,1572],"[callObject, chatHistory, props]"]